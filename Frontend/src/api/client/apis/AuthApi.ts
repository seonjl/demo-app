/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GoogleAuthorize200Response,
  GoogleAuthorizeRequest,
  V1AuthGoogleRefreshPost200Response,
  V1AuthGoogleRefreshPostRequest,
  V1AuthGoogleRevokePost200Response,
  V1AuthGoogleRevokePostRequest,
} from '../models/index';
import {
    GoogleAuthorize200ResponseFromJSON,
    GoogleAuthorize200ResponseToJSON,
    GoogleAuthorizeRequestFromJSON,
    GoogleAuthorizeRequestToJSON,
    V1AuthGoogleRefreshPost200ResponseFromJSON,
    V1AuthGoogleRefreshPost200ResponseToJSON,
    V1AuthGoogleRefreshPostRequestFromJSON,
    V1AuthGoogleRefreshPostRequestToJSON,
    V1AuthGoogleRevokePost200ResponseFromJSON,
    V1AuthGoogleRevokePost200ResponseToJSON,
    V1AuthGoogleRevokePostRequestFromJSON,
    V1AuthGoogleRevokePostRequestToJSON,
} from '../models/index';

export interface GoogleAuthorizeOperationRequest {
    googleAuthorizeRequest: GoogleAuthorizeRequest;
}

export interface V1AuthGoogleRefreshPostOperationRequest {
    v1AuthGoogleRefreshPostRequest: V1AuthGoogleRefreshPostRequest;
}

export interface V1AuthGoogleRevokePostOperationRequest {
    v1AuthGoogleRevokePostRequest: V1AuthGoogleRevokePostRequest;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     * Google 회원가입/로그인을 처리한다. redirectUri 는 ${origin}/redirect/google
     * Auth.google.authorize
     */
    async googleAuthorizeRaw(requestParameters: GoogleAuthorizeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GoogleAuthorize200Response>> {
        if (requestParameters['googleAuthorizeRequest'] == null) {
            throw new runtime.RequiredError(
                'googleAuthorizeRequest',
                'Required parameter "googleAuthorizeRequest" was null or undefined when calling googleAuthorize().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/auth/google/authorize`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GoogleAuthorizeRequestToJSON(requestParameters['googleAuthorizeRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GoogleAuthorize200ResponseFromJSON(jsonValue));
    }

    /**
     * Google 회원가입/로그인을 처리한다. redirectUri 는 ${origin}/redirect/google
     * Auth.google.authorize
     */
    async googleAuthorize(requestParameters: GoogleAuthorizeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GoogleAuthorize200Response> {
        const response = await this.googleAuthorizeRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * access_token 토큰을 갱신한다.
     * Auth.google.refresh
     */
    async v1AuthGoogleRefreshPostRaw(requestParameters: V1AuthGoogleRefreshPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1AuthGoogleRefreshPost200Response>> {
        if (requestParameters['v1AuthGoogleRefreshPostRequest'] == null) {
            throw new runtime.RequiredError(
                'v1AuthGoogleRefreshPostRequest',
                'Required parameter "v1AuthGoogleRefreshPostRequest" was null or undefined when calling v1AuthGoogleRefreshPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/auth/google/refresh`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1AuthGoogleRefreshPostRequestToJSON(requestParameters['v1AuthGoogleRefreshPostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1AuthGoogleRefreshPost200ResponseFromJSON(jsonValue));
    }

    /**
     * access_token 토큰을 갱신한다.
     * Auth.google.refresh
     */
    async v1AuthGoogleRefreshPost(requestParameters: V1AuthGoogleRefreshPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1AuthGoogleRefreshPost200Response> {
        const response = await this.v1AuthGoogleRefreshPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 토큰을 폐기한다.
     * Auth.google.revoke
     */
    async v1AuthGoogleRevokePostRaw(requestParameters: V1AuthGoogleRevokePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<V1AuthGoogleRevokePost200Response>> {
        if (requestParameters['v1AuthGoogleRevokePostRequest'] == null) {
            throw new runtime.RequiredError(
                'v1AuthGoogleRevokePostRequest',
                'Required parameter "v1AuthGoogleRevokePostRequest" was null or undefined when calling v1AuthGoogleRevokePost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/auth/google/revoke`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: V1AuthGoogleRevokePostRequestToJSON(requestParameters['v1AuthGoogleRevokePostRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => V1AuthGoogleRevokePost200ResponseFromJSON(jsonValue));
    }

    /**
     * 토큰을 폐기한다.
     * Auth.google.revoke
     */
    async v1AuthGoogleRevokePost(requestParameters: V1AuthGoogleRevokePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<V1AuthGoogleRevokePost200Response> {
        const response = await this.v1AuthGoogleRevokePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
